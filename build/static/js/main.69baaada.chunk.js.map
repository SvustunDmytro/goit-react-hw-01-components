{"version":3,"sources":["Components/SocialProfile/SocialProfile.module.css","Components/Stats/Stats.module.css","Components/FriendListItem/FriendListItem.module.css","Components/FriendList/FriendList.module.css","Components/TransactionHistory/TransactionHistory.module.css","Components/SocialProfile/SocialProfile.js","Components/Stats/Stats.js","Components/FriendListItem/FriendListItem.js","Components/FriendList/FriendList.js","Components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","SocialProfile","user","name","tag","location","avatar","stats","className","styles","SocialProfileWrapper","profile","description","src","alt","label","quantity","followers","views","likes","defaultProps","Stats","title","StatsWrapper","stats_section","stat_list","map","el","item","key","id","percentage","FriendListItem","friends","status","isOnline","green","red","width","FriendList","FriendListWrapper","friend_list","TransactionHistory","items","TransactionHistoryWrapper","transaction_history","type","amount","currency","App","ReactDOM","render","document","getElementById"],"mappings":"sIACAA,EAAOC,QAAU,CAAC,qBAAuB,4CAA4C,QAAU,+BAA+B,YAAc,mCAAmC,OAAS,8BAA8B,KAAO,4BAA4B,IAAM,2BAA2B,MAAQ,+B,gBCAlSD,EAAOC,QAAU,CAAC,aAAe,4BAA4B,cAAgB,6BAA6B,MAAQ,qBAAqB,UAAY,yBAAyB,KAAO,oBAAoB,WAAa,4B,gBCApND,EAAOC,QAAU,CAAC,KAAO,6BAA6B,OAAS,+BAA+B,IAAM,4BAA4B,MAAQ,8BAA8B,OAAS,+BAA+B,KAAO,+B,gBCArND,EAAOC,QAAU,CAAC,kBAAoB,wC,gBCAtCD,EAAOC,QAAU,CAAC,0BAA4B,sDAAsD,oBAAsB,kD,0wFCGpHC,EAAgB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACfC,EAAuCD,EAAvCC,KAAMC,EAAiCF,EAAjCE,IAAKC,EAA4BH,EAA5BG,SAAUC,EAAkBJ,EAAlBI,OAAQC,EAAUL,EAAVK,MACrC,OACE,yBAAKC,UAAWC,IAAOC,sBACrB,yBAAKF,UAAWC,IAAOE,SACrB,yBAAKH,UAAWC,IAAOG,aACrB,yBAAKC,IAAKP,EAAQQ,IAAI,cAAcN,UAAWC,IAAOH,SACtD,uBAAGE,UAAWC,IAAON,MAAOA,GAC5B,uBAAGK,UAAWC,IAAOL,KAAMA,GAC3B,uBAAGI,UAAWC,IAAOJ,UAAWA,IAGlC,wBAAIG,UAAWC,IAAOF,OACpB,4BACE,0BAAMC,UAAWC,IAAOM,OAAxB,aACA,0BAAMP,UAAWC,IAAOO,UAAWT,EAAMU,YAE3C,4BACE,0BAAMT,UAAWC,IAAOM,OAAxB,SACA,0BAAMP,UAAWC,IAAOO,UAAWT,EAAMW,QAE3C,4BACE,0BAAMV,UAAWC,IAAOM,OAAxB,SACA,0BAAMP,UAAWC,IAAOO,UAAWT,EAAMY,YAsBrDlB,EAAcmB,aAAe,GAIdnB,Q,gBCjDToB,EAAQ,SAAC,GAAsB,IAApBd,EAAmB,EAAnBA,MAAOe,EAAY,EAAZA,MACtB,OACE,yBAAKd,UAAWC,IAAOc,cACrB,6BAASf,UAAWC,IAAOe,eACzB,wBAAIhB,UAAWC,IAAOa,OAAQA,GAE9B,wBAAId,UAAWC,IAAOgB,WACnBlB,EAAMmB,KAAI,SAAAC,GAAE,OACX,wBAAInB,UAAWC,IAAOmB,KAAMC,IAAKF,EAAGG,IAClC,0BAAMtB,UAAWC,IAAOM,OAAQY,EAAGZ,OACnC,0BAAMP,UAAWC,IAAOsB,YAAaJ,EAAGI,WAAxC,aAoBdV,EAAMD,aAAe,CACnBE,MAAO,IAGMD,Q,gCClCTW,EAAiB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACxB,OACE,oCACGA,EAAQP,KAAI,SAAAC,GAAE,OACb,wBAAInB,UAAWC,IAAOmB,KAAMC,IAAKF,EAAGG,IAClC,0BACEtB,UAAS,UAAKC,IAAOyB,OAAZ,YACPP,EAAGQ,SAAW1B,IAAO2B,MAAQ3B,IAAO4B,OAGxC,yBACE7B,UAAWC,IAAOH,OAClBO,IAAKc,EAAGrB,OACRQ,IAAKa,EAAGxB,KACRmC,MAAM,OAER,uBAAG9B,UAAWC,IAAON,MAAOwB,EAAGxB,YAkBzC6B,EAAeZ,aAAe,GAIfY,QCrCTO,EAAa,SAAC,GAAD,IAAGN,EAAH,EAAGA,QAAH,OACjB,yBAAKzB,UAAWC,IAAO+B,mBACrB,wBAAIhC,UAAWC,IAAOgC,aACpB,kBAAC,EAAD,CAAgBR,QAASA,OAgB/BM,EAAWnB,aAAe,GAIXmB,Q,gBCxBTG,EAAqB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC5B,OACE,yBAAKnC,UAAWC,IAAOmC,2BACrB,2BAAOpC,UAAWC,IAAOoC,qBACvB,+BACE,4BACE,oCACA,sCACA,0CAIJ,+BACGF,EAAMjB,KAAI,SAAAC,GAAE,OACX,wBAAIE,IAAKF,EAAGG,IACV,4BAAKH,EAAGmB,MACR,4BAAKnB,EAAGoB,QACR,4BAAKpB,EAAGqB,kBAoBtBN,EAAmBtB,aAAe,GAInBsB,Q,cCPAO,MA7Bf,WAmBE,OACE,yBAAKzC,UAAU,OACb,kBAAC,EAAD,CAAeN,KApBN,CACXC,KAAM,gBACNC,IAAK,UACLC,SAAU,qBACVC,OAAQ,8DACRC,MAAO,CACLU,UAAW,KACXC,MAAO,KACPC,MAAO,SAaP,kBAAC,EAAD,CAAOZ,MAVG,CACZ,CAAEuB,GAAI,OAAQf,MAAO,QAASgB,WAAY,IAC1C,CAAED,GAAI,OAAQf,MAAO,OAAQgB,WAAY,GACzC,CAAED,GAAI,OAAQf,MAAO,OAAQgB,WAAY,IACzC,CAAED,GAAI,OAAQf,MAAO,OAAQgB,WAAY,IACzC,CAAED,GAAI,OAAQf,MAAO,OAAQgB,WAAY,KAKlBT,MAAM,iBAC3B,kBAAC,EAAD,CAAYW,QAASA,IACrB,kBAAC,EAAD,CAAoBU,MAAOA,MC5BjCO,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.69baaada.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"SocialProfileWrapper\":\"SocialProfile_SocialProfileWrapper__1nopv\",\"profile\":\"SocialProfile_profile__ZxrRy\",\"description\":\"SocialProfile_description__1ElBA\",\"avatar\":\"SocialProfile_avatar__1Yiim\",\"name\":\"SocialProfile_name__HFaE_\",\"tag\":\"SocialProfile_tag__13imF\",\"stats\":\"SocialProfile_stats__39uNT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"StatsWrapper\":\"Stats_StatsWrapper__-qALx\",\"stats_section\":\"Stats_stats_section__2Nuks\",\"title\":\"Stats_title__39hwo\",\"stat_list\":\"Stats_stat_list__VPKK9\",\"item\":\"Stats_item__1mpxb\",\"percentage\":\"Stats_percentage__9nZ7s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__niWoh\",\"status\":\"FriendListItem_status__3kj9B\",\"red\":\"FriendListItem_red__2-zJr\",\"green\":\"FriendListItem_green__2UXeo\",\"avatar\":\"FriendListItem_avatar__RKfgS\",\"name\":\"FriendListItem_name__3pHYl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FriendListWrapper\":\"FriendList_FriendListWrapper__1cXvu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TransactionHistoryWrapper\":\"TransactionHistory_TransactionHistoryWrapper__uMeQi\",\"transaction_history\":\"TransactionHistory_transaction_history__1Q12_\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './SocialProfile.module.css';\n\nconst SocialProfile = ({ user }) => {\n  const { name, tag, location, avatar, stats } = user;\n  return (\n    <div className={styles.SocialProfileWrapper}>\n      <div className={styles.profile}>\n        <div className={styles.description}>\n          <img src={avatar} alt=\"user avatar\" className={styles.avatar} />\n          <p className={styles.name}>{name}</p>\n          <p className={styles.tag}>{tag}</p>\n          <p className={styles.location}>{location}</p>\n        </div>\n\n        <ul className={styles.stats}>\n          <li>\n            <span className={styles.label}>Followers</span>\n            <span className={styles.quantity}>{stats.followers}</span>\n          </li>\n          <li>\n            <span className={styles.label}>Views</span>\n            <span className={styles.quantity}>{stats.views}</span>\n          </li>\n          <li>\n            <span className={styles.label}>Likes</span>\n            <span className={styles.quantity}>{stats.likes}</span>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nSocialProfile.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    tag: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    avatar: PropTypes.string.isRequired,\n    stats: PropTypes.shape({\n      followers: PropTypes.number.isRequired,\n      views: PropTypes.number.isRequired,\n      likes: PropTypes.number.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nSocialProfile.defaultProps = {\n  // bla: 'test',\n};\n\nexport default SocialProfile;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Stats.module.css';\n\nconst Stats = ({ stats, title }) => {\n  return (\n    <div className={styles.StatsWrapper}>\n      <section className={styles.stats_section}>\n        <h2 className={styles.title}>{title}</h2>\n\n        <ul className={styles.stat_list}>\n          {stats.map(el => (\n            <li className={styles.item} key={el.id}>\n              <span className={styles.label}>{el.label}</span>\n              <span className={styles.percentage}>{el.percentage}%</span>\n            </li>\n          ))}\n        </ul>\n      </section>\n    </div>\n  );\n};\n\nStats.propTypes = {\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }).isRequired,\n  ).isRequired,\n  title: PropTypes.string,\n};\n\nStats.defaultProps = {\n  title: '',\n};\n\nexport default Stats;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './FriendListItem.module.css';\n\nconst FriendListItem = ({ friends }) => {\n  return (\n    <>\n      {friends.map(el => (\n        <li className={styles.item} key={el.id}>\n          <span\n            className={`${styles.status} ${\n              el.isOnline ? styles.green : styles.red\n            }`}\n          />\n          <img\n            className={styles.avatar}\n            src={el.avatar}\n            alt={el.name}\n            width=\"48\"\n          />\n          <p className={styles.name}>{el.name}</p>\n        </li>\n      ))}\n    </>\n  );\n};\n\nFriendListItem.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n      id: PropTypes.number.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nFriendListItem.defaultProps = {\n  // bla: 'test',\n};\n\nexport default FriendListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './FriendList.module.css';\nimport FriendListItem from '../FriendListItem/FriendListItem';\n\nconst FriendList = ({ friends }) => (\n  <div className={styles.FriendListWrapper}>\n    <ul className={styles.friend_list}>\n      <FriendListItem friends={friends} />\n    </ul>\n  </div>\n);\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n      id: PropTypes.number.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nFriendList.defaultProps = {\n  // bla: 'test',\n};\n\nexport default FriendList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ items }) => {\n  return (\n    <div className={styles.TransactionHistoryWrapper}>\n      <table className={styles.transaction_history}>\n        <thead>\n          <tr>\n            <th>Type</th>\n            <th>Amount</th>\n            <th>Currency</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {items.map(el => (\n            <tr key={el.id}>\n              <td>{el.type}</td>\n              <td>{el.amount}</td>\n              <td>{el.currency}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nTransactionHistory.defaultProps = {\n  // bla: 'test',\n};\n\nexport default TransactionHistory;\n","import React from 'react';\nimport './App.css';\nimport SocialProfile from './Components/SocialProfile/SocialProfile';\nimport Stats from './Components/Stats/Stats';\nimport FriendList from './Components/FriendList/FriendList';\nimport TransactionHistory from './Components/TransactionHistory/TransactionHistory';\nimport friends from './Components/FriendList/friends.json';\nimport items from './Components/TransactionHistory/transaction.json';\n\nfunction App() {\n  const user = {\n    name: 'Jacques Gluke',\n    tag: '@jgluke',\n    location: 'Ocho Rios, Jamaica',\n    avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/r_oy/128.jpg',\n    stats: {\n      followers: 5603,\n      views: 4827,\n      likes: 1308,\n    },\n  };\n  const stats = [\n    { id: 'id-1', label: '.docx', percentage: 22 },\n    { id: 'id-2', label: '.pdf', percentage: 4 },\n    { id: 'id-3', label: '.mp3', percentage: 17 },\n    { id: 'id-4', label: '.psd', percentage: 47 },\n    { id: 'id-5', label: '.pdf', percentage: 10 },\n  ];\n  return (\n    <div className=\"App\">\n      <SocialProfile user={user} />\n      <Stats stats={stats} title=\"Upload stats\" />\n      <FriendList friends={friends} />\n      <TransactionHistory items={items} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}